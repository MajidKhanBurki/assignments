//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Alachi_Soft_Assignment_1.ServiceReference1 {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ServiceReference1.WebService1Soap")]
    public interface WebService1Soap {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomers", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetCustomers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetCustomers", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetCustomersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOrders", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string GetOrders(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/GetOrders", ReplyAction="*")]
        System.Threading.Tasks.Task<string> GetOrdersAsync(string customerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string CreateCustomer(string CustomerId, string CompanyName, string ContactName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/CreateCustomer", ReplyAction="*")]
        System.Threading.Tasks.Task<string> CreateCustomerAsync(string CustomerId, string CompanyName, string ContactName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string UpdateCustomer(string CustomerId, string CompanyName, string ContactName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/UpdateCustomer", ReplyAction="*")]
        System.Threading.Tasks.Task<string> UpdateCustomerAsync(string CustomerId, string CompanyName, string ContactName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteCustomer", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string DeleteCustomer(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/DeleteCustomer", ReplyAction="*")]
        System.Threading.Tasks.Task<string> DeleteCustomerAsync(string id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PlaceOrder", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PlaceOrder(int ProductId, string CustomerId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/PlaceOrder", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PlaceOrderAsync(int ProductId, string CustomerId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface WebService1SoapChannel : Alachi_Soft_Assignment_1.ServiceReference1.WebService1Soap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WebService1SoapClient : System.ServiceModel.ClientBase<Alachi_Soft_Assignment_1.ServiceReference1.WebService1Soap>, Alachi_Soft_Assignment_1.ServiceReference1.WebService1Soap {
        
        public WebService1SoapClient() {
        }
        
        public WebService1SoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WebService1SoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebService1SoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WebService1SoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetCustomers() {
            return base.Channel.GetCustomers();
        }
        
        public System.Threading.Tasks.Task<string> GetCustomersAsync() {
            return base.Channel.GetCustomersAsync();
        }
        
        public string GetOrders(string customerId) {
            return base.Channel.GetOrders(customerId);
        }
        
        public System.Threading.Tasks.Task<string> GetOrdersAsync(string customerId) {
            return base.Channel.GetOrdersAsync(customerId);
        }
        
        public string CreateCustomer(string CustomerId, string CompanyName, string ContactName) {
            return base.Channel.CreateCustomer(CustomerId, CompanyName, ContactName);
        }
        
        public System.Threading.Tasks.Task<string> CreateCustomerAsync(string CustomerId, string CompanyName, string ContactName) {
            return base.Channel.CreateCustomerAsync(CustomerId, CompanyName, ContactName);
        }
        
        public string UpdateCustomer(string CustomerId, string CompanyName, string ContactName) {
            return base.Channel.UpdateCustomer(CustomerId, CompanyName, ContactName);
        }
        
        public System.Threading.Tasks.Task<string> UpdateCustomerAsync(string CustomerId, string CompanyName, string ContactName) {
            return base.Channel.UpdateCustomerAsync(CustomerId, CompanyName, ContactName);
        }
        
        public string DeleteCustomer(string id) {
            return base.Channel.DeleteCustomer(id);
        }
        
        public System.Threading.Tasks.Task<string> DeleteCustomerAsync(string id) {
            return base.Channel.DeleteCustomerAsync(id);
        }
        
        public string PlaceOrder(int ProductId, string CustomerId) {
            return base.Channel.PlaceOrder(ProductId, CustomerId);
        }
        
        public System.Threading.Tasks.Task<string> PlaceOrderAsync(int ProductId, string CustomerId) {
            return base.Channel.PlaceOrderAsync(ProductId, CustomerId);
        }
    }
}
